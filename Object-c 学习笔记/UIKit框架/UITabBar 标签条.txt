// 创建UITabBar对象
UITabBar* tabBar = [[UITabBar alloc] initWithFrame:CGRectMake(0 ,0 ,320,44)];

// 将tabBar添加到标签条中
[self.view addSubview:tabBar];

// 使用系统图标创建标签项
UITabBarItem* tabItem1 = [[UITabBarItem alloc]
		initWithTabBarSystemItem:UITabBarSystemItemHistory
		tag:0];

// 使用用户图标创建标签项	
UITabBarItem* tabItem2 = [[UITabBarItem alloc] initWithTitle:@"标题1"
		image:[UIImage imageNamed:@"图片路径"]
		tag:1];
tabItem2.badgeValue = @"热";//设置徽标值，支持汉字、字母、数字

// 使用用户图标创建标签项
UITabBarItem* tabItem3 = [[UITabBarItem alloc] initWithTitle:@"标题2"
		image:[UIImage imageNamed:@"图片路径"]
		tag:2];

// 为UITabBar设置多个标签项
tabBar.items = [NSArray arrayWithObjects:tabItem1, tabItem2 , tabItem3, nil];


UITabBar提供如下属性和方法：

items;//设置或返回UITabBar所包含的多个UITabBarItem控件组成的数组

selectedItem;//返回该UITabBar当前被选中的标签项

// 同时为UITabBar设置多个UITabBarItem控件
-(void)setItems:(NSArray *)
	animated:(BOOL);


如果程序需要监听用户单击了哪个标签项，则需要委托对象来实现，UITabBar的委托对象必须实现UITabBarDelegate协议：

UITabBar对象.delegate = UITabBarDelegate对象;

该协议定义了如下方法：

// 由UITabBarDelegate定义的方法，当用户选中某个标签项时激发该方法。
- (void)tabBar:(UITabBar *)tabBar
	didSelectItem:(UITabBarItem *)item
{
	item.tag;//获取被单击项的tag值
}




*UITabBarController

UITabBarController可以同时管理多个UIViewController，并为每个UIViewController设置tabBarItem属性，该属性接受一个UITabBarItem对象：

// 创建UITabBarController
UITabBarController* tabBarController = [[UITabBarController alloc] init];

// 为UITabBarController设置多个视图控制器
// 如果希望UITabBarController显示几个Tab页，
// 就为UITabBarController添加几个视图控制器
tabBarController.viewControllers = [NSArray arrayWithObjects:bookListController, viewController, nil];







