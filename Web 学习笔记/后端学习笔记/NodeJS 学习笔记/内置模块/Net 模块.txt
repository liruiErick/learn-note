# Net 模块

var net = require('net');

net 模块可用于创建 Socket 服务器或 Socket 客户端。
由于 Socket 在前端领域的使用范围还不是很广，这里先不涉及到 WebSocket 的介绍，仅仅简单演示一下如何从 Socket 层面来实现 HTTP 请求和响应。


首先我们来看一个使用 Socket 搭建一个很不严谨的 HTTP 服务器的例子。
这个 HTTP 服务器不管收到啥请求，都固定返回相同的响应。

net.createServer(function(conn) {
	conn.on('data', function(data) {
		conn.write([
			'HTTP/1.1 200 OK',
			'Content-Type: text/plain',
			'Content-Length: 11',
			'',
			'Hello World'
		].join('\n'));
	});
}).listen(80);


接着我们来看一个使用 Socket 发起 HTTP 客户端请求的例子。
这个例子中，Socket 客户端在建立连接后发送了一个 HTTP GET 请求，并通过 data 事件监听函数来获取服务器响应。

var options = {
	port: 80,
	host: './server.js'
};
var client = net.connect(options, function() {
	client.write([
		'GET / HTTP/1.1',
		'User-Agent: curl/7.26.0',
		'Host: www.baidu.com',
		'Accept: */*',
		'',
		''
	].join('\n'));
});
client.on('data', function(data) {
	console.log(data.toString());
	client.end();
});

