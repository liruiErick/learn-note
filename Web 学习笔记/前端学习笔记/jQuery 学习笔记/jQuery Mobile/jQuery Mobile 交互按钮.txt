* 创建按钮

jQuery Mobile 中的按钮可通过三种方法创建：
使用 <button> 元素
<button>按钮</button>

使用 <input> 元素
<input type="button" value="按钮">

使用 data-role="button" 的 <a> 元素
<a href="#" data-role="button">按钮</a>

jQuery Mobile 中的按钮会自动获得样式。推荐使用 data-role="button" 的 <a> 元素来创建页面之间的链接，而 <input> 或 <button> 元素用于表单提交。


// 行内按钮
默认情况下，按钮会占据屏幕的全部宽度。如需按钮适应其内容，或者如需两个或多个按钮并排显示，请添加 data-inline="true"：
<a href="#page2" data-role="button" data-inline="true">转到页面二</a>


// 按钮组
默认情况下，按钮组是垂直分组的，彼此间没有外边距和空白。并且只有第一个和最后一个按钮拥有圆角，在组合后就创造出了漂亮的外观。
将 data-role="controlgroup" 属性与 data-type="horizontal|vertical" 一同使用，以规定水平或垂直地组合按钮：
例如：
<div data-role="controlgroup" data-type="horizontal">
  <a href="#anylink" data-role="button">按钮 1</a>
  <a href="#anylink" data-role="button">按钮 2</a>
  <a href="#anylink" data-role="button">按钮 3</a>
</div>


// 后退按钮
如需创建后退按钮，请使用 data-rel="back" 属性（会忽略锚的 href 值）：
<a href="#" data-role="button" data-rel="back">返回</a>


// 更多用于按钮的 data-* 属性
属性			值			描述
data-corners		true | false		规定按钮是否有圆角。
data-mini		true | false		规定是否是小型按钮。
data-shadow		true | false		规定按钮是否有阴影。




* 为按钮添加图标

如需向按钮添加图标，可以使用 data-icon 属性：
<a href="#anylink" data-role="button" data-icon="search">搜索</a>

// 更多图标类型
data-icon="arrow-l"	左箭头
data-icon="arrow-r"	右箭头
data-icon="arrow-u"	上箭头
data-icon="arrow-d"	下箭头
data-icon="plus"	加
data-icon="minus"	减
data-icon="delete"	删除
data-icon="check"	检查
data-icon="home"	首页
data-icon="info"	信息
data-icon="grid"	网格
data-icon="gear"	齿轮
data-icon="search"	搜索
data-icon="back"	后退
data-icon="forward"	向前
data-icon="refresh"	刷新
data-icon="star"	星
data-icon="alert"	提醒


// 定位图标
规定图标被放置的位置：上、右、下或左，可以 data-iconpos="top|right|bottom|left" 属性来规定位置：
<a href="#link" data-role="button" data-icon="search" data-iconpos="right">右</a>.


// 只显示图标
如果只需显示图标，可以将 data-iconpos 设置为 "notext"：
Back 按钮:
<a href="#link" data-role="button" data-icon="search" data-iconpos="notext">搜索</a>


// 更多用于按钮图标的 data-* 属性
data-iconshadow		true | false				规定按钮图标是否有阴影。
data-icon		Icons Reference				规定按钮的图标。默认是没有图标。
data-iconpos		left | right | top | bottom | notext	规定图标的位置。




* 工具栏与工具栏中的按钮

// 页眉栏
页眉通常会包含页眉标题/LOGO 或一到两个按钮（通常是首页、选项或搜索按钮）。
可以在页眉中向左侧或/以及右侧添加按钮。
下面的代码，将向页眉标题文本的左右两侧各添加一个按钮：

<div data-role="header">
  <a href="#" data-role="button">首页</a>
  <h1>欢迎来到我的主页</h1>
  <a href="#" data-role="button">搜索</a>
</div>

如果页眉中只有一个按钮元素，那么它默认实在标题左侧的。如需只在页眉标题的右侧添加按钮，请规定类名 "ui-btn-right"：

<div data-role="header">
  <h1>欢迎来到我的主页</h1>
  <a href="#" data-role="button" class="ui-btn-right">搜索</a>
</div>

提示：页眉只可以包含一个或两个按钮，然而页脚没有限制。

如果该页是作为跳转到的目标页，那么可以通过为页眉添加 data-add-back-btn="true" 属性，来添加返回按钮。
同时可以通过 data-back-btn-text 来为返回按钮指定文本:
<div data-role="header" data-add-back-btn="true" data-back-btn-text="返回">


// 页脚栏
与页眉相比，页脚更具伸缩性 - 它们更实用且多变，所以能够包含所需数量的按钮：

<div data-role="footer">
  <a href="#" data-role="button">转播到新浪微博</a>
  <a href="#" data-role="button">转播到腾讯微博</a>
  <a href="#" data-role="button">转播到 QQ 空间</a>
</div>

页脚与页眉的样式不同（它会减去一些内边距和空白，并且按钮不会居中）。如果要修正该问题，请在页脚设置类名 "ui-btn"：
<div data-role="footer" class="ui-btn">


// 定位页眉和页脚
请使用 data-position 属性来定位页眉和页脚：

Inline - 默认。页眉和页脚位于页面内容的顶部和底部。
<div data-role="header" data-position="inline"></div>
<div data-role="footer" data-position="inline"></div>

Fixed - 页面和页脚位于窗口的顶部和底部。触摸屏幕将会根据当前页面置顶还是置底或者是置中，来自动选择隐藏和显示页眉及页脚。
<div data-role="header" data-position="fixed"></div>
<div data-role="footer" data-position="fixed"></div>

定义 Fixed 的同时可以声明 data-fullscreen 属性，作用是页面内容区域全屏显示，并且页眉及页脚会对被遮挡的内容透明显示。同时触摸屏幕将会自动选择隐藏和显示页眉及页脚。
<div data-role="header" data-position="fixed" data-fullscreen="true"></div>
<div data-role="footer" data-position="fixed" data-fullscreen="true"></div>

其他一些定义 Fixed 的同时可以声明 data-* 属性：
data-transition			slide | fade | none	规定当触摸屏幕时隐藏和显示页眉及页脚的过渡效果，默认为 slide。
data-disable-page-zoom		true | false		规定用户是否有能力缩放页面。
data-tap-toggle			true | false		规定用户是否有能力通过点击/敲击来切换工具栏的可见性。
data-update-page-padding	true | false		规定当发生 resize、transition 以及 "updatelayout" 事件时更新页面上下内边距（jQuery Mobile 总是在 "pageshow" 事件发生时更新内边距）
data-visible-on-page-show	true | false		规定在显示父页面时的工具栏可见性。



// 导航栏
默认地，导航栏中的链接会自动转换为按钮（无需 data-role="button"）。
使用 data-role="navbar" 属性来定义导航栏（仅支持 <ul> 列表）：

<div data-role="header">
  <div data-role="navbar">
    <ul>
      <li><a href="#anylink">首页</a></li>
      <li><a href="#anylink">页面二</a></li>
      <li><a href="#anylink">搜索</a></li>
    </ul>
  </div>
</div>

按钮的宽度，默认地，与其内容一致。使用无序列表来均等地划分按钮：一个按钮占据 100% 的宽度，两个按钮各分享 50% 的宽度，三个按钮 33.3%，以此类推。
不过，如果在导航栏中规定了五个以上的按钮，那么它们会变为多行，每行最多显示两个按钮。

当导航栏中的链接被敲击时，会获得选取外观（按下）。
如需在不敲击链接时实现此外观（一般在初始化需要选中时），可以使用 class="ui-btn-active"：
<li><a href="#anylink" class="ui-btn-active">首页</a></li>

对于多个页面，当一个页面从另一个切换回来时，class="ui-btn-active" 是无法保留的，因此如需为每个按钮设置“被选”外观，可以向链接额外添加 "ui-state-persist" 类：
<li><a href="#anylink" class="ui-btn-active ui-state-persist">首页</a></li>




* 可收缩展开的内容块

如需创建可收缩展开的内容块，可以为容器声明 data-role="collapsible" 属性。
在容器（div）中，添加一个标题元素（h1-h6），该标题以按钮的形式呈现，其后是您需要扩展的任意 HTML 标记：

<div data-role="collapsible">
  <h1>点击我 - 我可以收缩展开！</h1>
  <p>我是可收缩展开的内容。</p>
</div>

默认地，该内容是被收起的。如需在页面加载时展开内容，可以使用 data-collapsed="false"。

// 可收缩展开集合（常被称为手风琴）当新块被打开时，所有其他块会关闭。
创建若干内容块，然后通过 data-role="collapsible-set" 用新容器包装这个可收缩展开内容块：

<div data-role="collapsible-set">
  <div data-role="collapsible">
    <h1>点击我 - 我可以折叠！</h1>
    <p>我是被展开的内容。</p>
  </div>
  <div data-role="collapsible">
    <h1>点击我 - 我可以折叠！</h1>
    <p>我是被展开的内容。</p>
  </div>
</div>

// 更多用于内容块标题按钮的 data-* 属性
属性			值					描述
data-inset		true | false				规定按钮是否有圆角。
data-mini		true | false				规定是否是小型按钮。
data-collapsed-icon	图标类型				规定按钮收缩时的图标。
data-expanded-icon	图标类型				规定按钮展开时的图标。
data-iconpos		left | right | top | bottom | notext	规定图标的位置。




* 列表视图

如需创建列表，可以向 <ol> 或 <ul> 元素添加 data-role="listview"。如需使这些项目可点击，可以在每个列表项（<li>）中规定链接。
默认地，列表中的列表项如果包含 <a> 链接，将会自动转换为按钮（无需 data-role="button"）：

<ol data-role="listview">
  <li><a href="#">列表项</a></li>
</ol>

<ul data-role="listview">
  <li><a href="#">列表项</a></li>
</ul>

如需为列表添加圆角和外边距，可以使用 data-inset="true" 属性：
<ul data-role="listview" data-inset="true">


// 列表分隔符
如需规定列表分隔符，请向 <li> 元素添加 data-role="list-divider" 属性：

<ul data-role="listview">
 <li data-role="list-divider">欧洲</li>
  <li><a href="#">法国</a></li>
  <li><a href="#">德国</a></li>
</ul>

如果希望列表是字母顺序的（比如通讯录），jQuery Mobile 自动添加恰当的分隔符，通过在 <ol> 或 <ul> 元素上设置 data-autodividers="true" 属性：
<ul data-role="listview" data-autodividers="true">
  <li><a href="#">Adam</a></li>
  <li><a href="#">Angela</a></li>
  <li><a href="#">Bill</a></li>
  <li><a href="#">Calvin</a></li>
  ...
</ul>

提示：data-autodividers="true" 属性通过对列表项文本的首字母进行大写来创建分隔符。如果是汉字，则是以每项文本的首个汉字来创建分隔符。


// 列表缩略图
如需向您的列表添加 16x16px 的图标，请向 <img> 元素添加 class="ui-li-icon" 属性，jQuery Mobile 将自动把图像调整至 16px X 16px：
<li><a href="#"><img src="us.png" alt="USA" class="ui-li-icon">USA</a></li>

对于大于 16px X 16px 的图像，则无需添加 class="ui-li-icon" 属性，jQuery Mobile 将自动把图像调整至 80px X 80px：

<ul data-role="listview">
  <li>
    <a href="#">
    <img src="chrome.png">
    <h2>Google Chrome</h2>
    <p>Google Chrome 免费的开源 web 浏览器。发布于 2008 年。</p>
    </a>
  </li>
</ul>


// 拆分按钮
如需创建带有垂直分隔栏的拆分列表，请在 <li> 元素内放置两个链接（最多两个连接）。
jQuery Mobile 会自动为第二个链接添加蓝色箭头图标的样式，链接中的文本（如有）将在用户划过该图标时显示：

<ul data-role="listview">
  <li>
    <a href="#"><img src="chrome.png"></a>
    <a href="#download" data-rel="dialog">下载浏览器</a>
  </li>
</ul>


// 计数泡沫
计数泡沫用于显示与列表项相关的数目，例如邮箱中的消息。
如需添加计数泡沫，请使用行内元素，比如 <span>，设置 class "ui-li-count" 属性并添加数字：

<ul data-role="listview">
  <li><a href="#">Inbox<span class="ui-li-count">335</span></a></li>
  <li><a href="#">Sent<span class="ui-li-count">123</span></a></li>
  <li><a href="#">Trash<span class="ui-li-count">7</span></a></li>
</ul>


// 搜索过滤器
如需在列表中添加搜索框，请使用 data-filter="true" 属性。
如需修改默认文本（文本占位符），请使用 data-filter-placeholder 属性：
<ul data-role="listview" data-filter="true" data-filter-placeholder="搜索姓名">


// 更多用于列表视图 <ol> 或 <ul> 的 data-* 属性
属性			值			描述
data-inset		true | false		规定按钮是否有圆角。
data-inset		true | false		规定是否为列表添加圆角和外边距样式。
data-icon		图标类型		规定列表的图标。
data-split-icon		图标类型		规定拆分按钮的图标。默认是 "arrow-r"。
data-theme		letter (a-z)		规定列表的主题颜色。
data-split-theme	letter (a-z)		规定划分按钮的主题颜色。默认是 "b"。
data-count-theme	letter (a-z)		规定计数泡沫的主题颜色。默认是 "c"。
data-divider-theme	letter (a-z)		规定列表分隔符的主题颜色。默认是 "b"。


// 更多用于列表视图 <li> 的 data-* 属性
属性			值			描述
data-filtertext		sometext		规定在过滤元素时搜索的文本。该文本而不是实际的列表项文本将会被搜索。
data-icon		图标类型		规定列表项的图标。
data-role		list-divider		规定列表项的分隔符。
data-theme		letter (a-z)		规定列表项的主题颜色。






