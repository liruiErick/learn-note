* 在 CSS2.1 中，可以通过在 html 文档中的头部添加 <link> 标签：

设置外部样式表文件的设备类型：
<link rel="stylesheet" type="text/css" href="css/style.css" media="screen" />

设置内部样式表文件的设备类型：
<style type="text/css" media="screen">
...
</style>


* CSS3 中加入了 Media Queries 模块，该模块中允许在 CSS 文件中添加媒体查询表达式，用以指定媒体类型，然后根据媒体类型来选择应该使用的样式。（IE8及以下浏览器不支持）

@media 规则的语法格式如下：

@media: 设备类型 关键字 (设备特性) {
	选择器 { 样式代码 }
}

其中设备类型有：
all  默认值，用于所有设备类型
aural  用于语音和音乐合成器
braille  用于触觉反馈设备
embossed  用于凸点字符（盲文）印刷设备
handheld  用于小型或手提设备
print  用于打印机
projection  用于投影图像，如幻灯片
screen  用于计算机显示器
tty  用于使用固定间距字符格的设备，如电传打字机和终端
tv  用于电视类设备

其中设备特性有：
大部分接受min/max前缀，用来表示其逻辑关系，表示应用于大于等于或者小于等于某个值的情况
属性				值			Min/Max		描述
width/height			length			支持		设备屏幕的输出宽高（device-pixel-ratio * 物理宽高 = 输出宽高）
device-width/height		length			支持		设备屏幕的物理宽高（输出宽高 / device-pixel-ratio = 物理宽高）
aspect-ratio			比例			支持		设备屏幕的输出宽高比率（4/3, 16/9, 16/10）
device-aspect-ratio		比例			支持		设备屏幕的物理宽高比率（4/3, 16/9, 16/10）
color				整数			支持		每种色彩的字节数
color-index			整数			支持		色彩表中的色彩数
monochrome			整数			支持		单色帧缓冲器中每像素字节
grid				整数			支持		是否是基于格栅的设备
scan				progressive/interlaced	不支持		tv媒体类型的扫描方式
orientation			portrait/landscape	不支持		横屏或竖屏
resolution			分辨率(dpi/dpcm)	不支持		分辨率

其中关键字有：
and: 用于关联一个设备特性
not: 用于排除一个设备类型或设备特性
only: 用来指定某种特定的设备类型，可以用来排除不支持媒体查询的浏览器。
	其实only很多时候是用来对那些不支持Media Query但却支持Media Type的设备隐藏样式表的。其主要有：
	1、支持媒体特性（Media Queries）的设备，正常调用样式，此时就当only不存在；
	2、对于不支持媒体特性(Media Queries)但又支持媒体类型(Media Type)的设备（如 IE8），由于先读only而不是screen，将忽略这个样式；
	3、另外不支持Media Qqueries的浏览器，不论是否支持only，样式都不会被采用。



* 使用方法：

当设备窗口宽度小于640px时使用的样式
@media screen and (max-width:639px){}

当设备窗口宽度大于640px小于1024px时使用的样式
@media screen and (min-width:640px) and (max-width:1023px){}

应用在非移动设备上或窗口宽度小于等于640px的设备上使用的样式
@media not handheld and (max-width:639px){}

应用在所有非彩色设备上使用的样式
@media all and (not color){}

分别应用于不同设备类型和设备特性中使用的样式
@media handheld and (min-width:360px), screen and (min-width:480px){}

只在支持媒体特性（Media Queries）的设备上使用的样式
@media only screen{}



* 其它媒体查询使用方法：

html 文档中调用另一个样式文件时使用媒体查询（推荐）：
<link rel="stylesheet" media="screen and (max-width: 600px)" href="small.css" />

样式文件中调用另一个样式文件时使用媒体查询：
@import url("css/style.css") screen;



* 移动设备上的应用

适用于最大设备宽度为480px，比如说iPhone上的显示，这里的max-device-width所指的是设备的实际分辨率，也就是指可视面积分辨率
<link rel="stylesheet" media="screen and (max-device-width: 480px)" href="iphone.css" type="text/css" />

专门针对iPhone4的移动设备
<link rel="stylesheet" media="only screen and (-webkit-min-device-pixel-ratio: 2)" type="text/css" href="iphone4.css" />

iPad 在纵向（portrait）时采用portrait.css来渲染页面；在横向（landscape）时采用landscape.css来渲染页面
<link rel="stylesheet" media="all and (orientation:portrait)" href="portrait.css" type="text/css" /> 
<link rel="stylesheet" media="all and (orientation:landscape)" href="landscape.css"  type="text/css" />

为android手机在不同分辨率提供特定样式，这样就可以解决屏幕分辨率的不同给android手机的页面重构问题
/*240px的宽度*/
<link rel="stylesheet" media="only screen and (max-device-width:240px)" href="android240.css" type="text/css" />
/*360px的宽度*/
<link rel="stylesheet" media="only screen and (min-device-width:241px) and (max-device-width:360px)" href="android360.css" type="text/css" />
/*480px的宽度*/
<link rel="stylesheet" media="only screen and (min-device-width:361px) and (max-device-width:480px)" href="android480.css" type="text/css" />



* 让 IE6-8 支持媒体检查
<!--[if lt IE 9]>
	<script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script>
<![endif]-->
下载地址：
https://code.google.com/p/css3-mediaqueries-js/



* javascript 的 Media Queries 事件（IE9及以下浏览器不支持）
var mq = window.matchMedia("screen and (max-width: 767px)");
mq.addListener(handleMediaQueries);
handleMediaQueries();
function handleMediaQueries() {
	if (mq.matches) {
		// 满足规则
	} else {
		// 不满足规则
	}
}
// 移除监听器
mq.removeListener(handleMediaQueries);
