CSS Expressions 俗称 CSS 表达式（从 IE8 开始已不再支持）

IE5及其以后版本支持在CSS中使用expression，用来把CSS属性和Javascript表达式关联起来，这里的CSS属性可以是元素固有的属性，也可以是自定义属性。
就是说CSS属性后面可以是一段Javascript表达式，CSS属性的值等于Javascript表达式计算的结果。在表达式中可以直接引用元素自身的属性和方法，也可以使用其他浏览器对象。这个表达式就好像是在这个元素的一个成员函数中一样。

例如，你可以依照浏览器的大小来安置一个元素的位置。
#myDiv { 
	position: absolute; 
	width: 100px; 
	height: 100px; 
	left: expression(document.body.offsetWidth - 110 + "px"); 
	top: expression(document.body.offsetHeight - 110 + "px"); 
	background: red; 
}


消除页面上的链接虚线框，采用expression的做法如下：
<style type="text/css"> 
a { star: expression(onfocus=this.blur); } 
</style> 
<a href="link1.htm">link1</a> 
<a href="link2.htm">link2</a> 
<a href="link3.htm">link3</a>

说明：里面的star就是自己任意定义的属性，你可以随自己喜好另外定义。
接着包含在expression()里的语句就是JS脚本，在自定义属性与expression之间可别忘了还有一个冒号，因为实质还是CSS，所以放在style标签内，而非script内。


避免使用 CSS Expressions 是前端开发的一个重要指南，为什么要避免使用 CSS Expressions 呢？我们看看雅虎YUI的说明：
表达式的问题就在于它的计算频率要比我们想象的多。不仅仅是在页面显示和缩放时，就是在页面滚动、乃至移动鼠标时都会要重新计算一次。给CSS表达式增加一个计数器可以跟踪表达式的计算频率。在页面中随便移动鼠标都可以轻松达到10000次以上的计算量。