/* 旧弹性容器（设置在父元素上） */
/* 设置了弹性盒后，CSS的columns在弹性容器上没有效果 */
/* 设置了弹性盒后，float、clear和vertical-align在子元素上没有效果 */
display: box; /* 设置了盒模型的父元素可以按比例排列子元素，默认为水平方向平均排列，且该父元素会变为内联元素 */

/* 兼容模式，所有子属性同样要加上对应前缀（IE浏览器与opera浏览器都不支持） */
display:
	-webkit-box; /* old - iOS 6-, Safari 3.1-6 */
	-moz-box; /* old - Firefox 19- */

/* 设置盒模型容器内元素的排列方式（设置在父元素上） */
box-orient:
	horizontal; /* 在水平行中从左向右排列子元素 */
		/* 此时如果父元素定义了高度值，其子元素的高度值设置则无效状态，所有子元素的高度等于父元素的高度值；如果父元素不设置高度值，其子元素的高度值才有效并且取最大高度值的子元素的高度 */
	vertical; /* 从上向下垂直排列子元素 */
		/* 此时如果父元素定义了宽度值，其子元素的宽度值设置则无效状态，所有子元素的宽度等于父元素的宽度值；如果父元素不设置宽度值，其子元素的宽度值才有效并且取最大宽度值的子元素的宽度 */
	inline-axis; /* 沿着行内轴来排列子元素（映射为 horizontal） */
	block-axis; /* 沿着块轴来排列子元素（映射为 vertical） */
	inherit; /* 应该从父元素继承 box-orient 属性的值 */

/* 设置盒模型容器内元素的反方向显示元素内容（设置在父元素上） */
box-direction:
	normal; /* 默认不改变方向 */
	reverse;  /* 反向排列 */

/* 设置子元素与排列方向同方向的对齐方式（设置在父元素上） */
box-pack:
	start; /* 默认值，根据子元素排列方向，整体向起始位置对齐 */
	end; /* 根据子元素排列方向，整体向结位束置对齐 */
	center; /* 根据子元素排列方向，贴紧居中对齐，如果剩余空间是负数，则保持两端溢出的长度相等 */
	justify; /* 根据子元素排列方向，贴紧两端平均分布 */

/* 设置每行中的子元素与排列方向垂直方向的对齐方式（设置在父元素上） */
box-align:
	start; /* 根据子元素排列方向的垂直方向，每行中的子元素向起始位置对齐 */
	end; /* 根据子元素排列方向的垂直方向，每行中的子元素向结束位置对齐 */
	center; /* 根据子元素排列方向的垂直方向，每行中的子元素向居中位置对齐 */
	baseline; /* 根据子元素排列方向的垂直方向，每行中的子元素延基线对齐 */
	stretch; /* 默认值，每行中的子元素拉伸填充整个伸缩容器。此值会使项目的外边距盒的尺寸在遵照「min/max-width/height」属性的限制下尽可能接近所在行的尺寸 */

/* 设置子元素在父元素中的显示顺序（设置在子元素上） */
box-ordinal-group: 1; /* 一个整数，指示子元素的显示次序，1为最小值 */

/* 设置子元素在父元素中所占用的比例（设置在子元素上） */
box-flex: 1; /* 计算方式是将同一行内所有子元素的该属性值相加，然会算出自己所占的比 */
/* 子元素如果设置了固定宽度值，该子元素则直接应用设置的宽度值，其它没有设置的则在父元素的宽度基础上减去子元素的固定宽度后剩下的宽度基础上按比例进行划分分配 */




/* 新弹性容器（设置在父元素上） */
/* 移动设备上，只有Safari6.1+ Android4.4+ 支持 */
/* 设置了弹性盒后，CSS的columns在弹性容器上没有效果 */
/* 设置了弹性盒后，float、clear和vertical-align在子元素上没有效果 */
display:
	flex; /* 块级弹性容器，如果子元素溢出，可以平均调整子元素宽高来适应自身的宽高，收缩内容防止内容溢出 */
	inline-flex; /* 行内弹性容器，可以与其他行内元素并列于同一行 */

/* 兼容模式，所有子属性同样要加上对应前缀 */
display:
	-webkit-flex; /* new - Chrome */
	-webkit-inline-flex;
	-ms-flexbox; /* IE 10+ */
	-ms-inline-flexbox;
	flex; /* new, Spec - Opera 12.1, Firefox 20+ */
	inline-flex;

/* 设置容器内元素的排列方向（设置在父元素上） */
flex-direction:
	row; /* 横向排列（默认左对齐） */
	row-reverse; /* 横向反向排列（默认右对齐） */
	column;  /* 纵向排列（默认顶对齐） */
	column-reverse;  /* 纵向反向排列（默认底对齐） */

/* 设置容器内元素的换行方式（设置在父元素上） */
flex-wrap:
	nowrap; /* 默认值，子元素不换行，如果子元素的设置宽度之和超过父元素，那么子元素的实际宽度会被适当的减小，以适应一行内显示 */
	wrap; /* 子元素超出后换行 */
	wrap-reverse; /* 子元素超出后换行。如果是水平排列，则第一行从底部开始。如果是垂直排列，则第一行从右侧开始 */

/* “flex-direction”和“flex-wrap”属性的缩写版本 */
flex-flow: <flex-direction> || <flex-wrap>;

/* 设置子元素与排列方向同方向的对齐方式（设置在父元素上） */
justify-content:
	flex-start; /* 默认值，根据子元素排列方向，整体向起始位置对齐 */
	flex-end; /* 根据子元素排列方向，整体向结位束置对齐 */
	center; /* 根据子元素排列方向，贴紧居中对齐，如果剩余空间是负数，则保持两端溢出的长度相等 */
	space-between; /* 根据子元素排列方向，贴紧两端平均分布 */
	space-around; /* 根据子元素排列方向，子元素在弹性容器中平均分布，在两边各有一半的空间 */
/* IE 10+ */
-ms-flex-pack:
	start; /* 默认值，根据子元素排列方向，整体向起始位置对齐 */
	end; /* 根据子元素排列方向，整体向结位束置对齐 */
	center; /* 根据子元素排列方向，贴紧居中对齐，如果剩余空间是负数，则保持两端溢出的长度相等 */
	justify; /* 根据子元素排列方向，贴紧两端平均分布 */
	distribute; /* 根据子元素排列方向，子元素在弹性容器中平均分布，在两边各有一半的空间 */

/* 设置各行与子元素排列方向垂直方向的对齐方式（子元素排列超过1行时才会有效，设置在父元素上） */
align-content:
	flex-start; /* 根据子元素排列方向的垂直方向，各行向起始位置对齐 */
	flex-end; /* 根据子元素排列方向的垂直方向，各行向结束位置对齐 */
	center; /* 根据子元素排列方向的垂直方向，各行向居中位置对齐 */
	space-between; /* 根据子元素排列方向的垂直方向，各行贴紧两端平均分布 */
	space-around; /* 根据子元素排列方向的垂直方向，各行在弹性容器中平均分布，在两边各有一半的空间 */
	stretch; /* 默认值，各行将会伸展以占用剩余的空间 */
/* IE 10+ */
-ms-flex-line-pack:
	start; /* 根据子元素排列方向的垂直方向，各行向起始位置对齐 */
	end; /* 根据子元素排列方向的垂直方向，各行向结束位置对齐 */
	center; /* 根据子元素排列方向的垂直方向，各行向居中位置对齐 */
	justify; /* 根据子元素排列方向的垂直方向，各行贴紧两端平均分布 */
	distribute; /* 根据子元素排列方向的垂直方向，各行在弹性容器中平均分布，在两边各有一半的空间 */
	stretch; /* 默认值，各行将会伸展以占用剩余的空间 */

/* 设置每行中的子元素与排列方向垂直方向的对齐方式（align-content的值为 stretch 时才有效，设置在父元素上） */
align-item:
	flex-start; /* 根据子元素排列方向的垂直方向，每行中的子元素向起始位置对齐 */
	flex-end; /* 根据子元素排列方向的垂直方向，每行中的子元素向结束位置对齐 */
	center; /* 根据子元素排列方向的垂直方向，每行中的子元素向居中位置对齐 */
	baseline; /* 根据子元素排列方向的垂直方向，每行中的子元素延基线对齐 */
	stretch; /* 默认值，每行中的子元素拉伸填充整个伸缩容器。此值会使项目的外边距盒的尺寸在遵照「min/max-width/height」属性的限制下尽可能接近所在行的尺寸 */
/* IE 10+ */
-ms-flex-align:
	start; /* 根据子元素排列方向的垂直方向，每行中的子元素向起始位置对齐 */
	end; /* 根据子元素排列方向的垂直方向，每行中的子元素向结束位置对齐 */
	center; /* 根据子元素排列方向的垂直方向，每行中的子元素向居中位置对齐 */
	baseline; /* 根据子元素排列方向的垂直方向，每行中的子元素延基线对齐 */
	stretch; /* 默认值，每行中的子元素拉伸填充整个伸缩容器。此值会使项目的外边距盒的尺寸在遵照「min/max-width/height」属性的限制下尽可能接近所在行的尺寸 */

/* 设置单个子元素所在行中的对齐方式，取值与 align-item 相同（align-content的值为 stretch 时才有效，设置在子元素上） */
-webkit-align-self: auto;
-ms-flex-item-align: auto;
align-self: auto;

/* 设置子元素在父元素中的显示顺序（设置在子元素上） */
order: 0; /* 一个整数，指示子元素的显示次序，0为最小值 */
-ms-flex-order: 0; /* IE 10+ */

/* 符合属性，设置子元素在父元素中所占用的比例（设置在子元素上） */
flex: 1; /* 计算方式是将同一行内所有子元素的该属性值相加，然会算出自己所占的比 */
/* 子元素如果设置了固定宽度值，该子元素则直接应用设置的宽度值，其它没有设置的则在父元素的宽度基础上减去子元素的固定宽度后剩下的宽度基础上按比例进行划分分配 */
/* 可以拆分成三个子属性 */
flex-grow: <number>; /* 默认值为 0，设置子元素在父元素中所占用的比例 */
flex-shrink: <number>; /* 默认值为 1，根据需要用来定义伸缩项目收缩的能力 */
flex-basis: <length> | auto; /* 默认值为 auto，用来设置伸缩基准值，剩余的空间按比率进行伸缩 */
