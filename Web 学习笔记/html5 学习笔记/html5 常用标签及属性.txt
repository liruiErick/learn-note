* 常用属性

属性					值					描述
accesskey			character			规定访问元素的键盘快捷键
class				classname			规定元素的类名（用于规定样式表中的类）。
contenteditable		true/false			规定是否允许用户编辑内容。（html5新增属性）
contextmenu			menu_id				规定元素的上下文菜单。（html5新增属性）
data-yourvalue		value				自定义属性。HTML 文档的创作者可以定义他们自己的属性。必须以 "data-" 开头。（html5新增属性）
dir					ltr/rtl				规定元素中内容的文本方向。
draggable			true/false/auto		规定是否允许用户拖动元素。（html5新增属性）
hidden				hidden				规定该元素是无关的。被隐藏的元素不会显示。（html5新增属性）
id					id					规定元素的唯一 ID。
item				empty/url			用于组合元素。（html5新增属性）
itemprop			url/group/value		用于组合项目。（html5新增属性）
lang				language_code		规定元素中内容的语言代码。语言代码参考手册。
spellcheck			true/false			规定是否必须对元素进行拼写或语法检查。（html5新增属性）
style				style_definition	规定元素的行内样式。
subject				id					规定元素对应的项目。（html5新增属性）
tabindex			number				规定元素的 tab 键控制次序。
title				text				规定有关元素的额外信息。
alt					text				<img>特有，规定图像的替代文本。
rel					text				<link><a>特有，规定当前文档与被链接文档之间的关系。
unselectable		on/off				开启或关闭禁止选择（貌似是IE专有属性）


* 关于自定义属性
// 实际测试发现IE10及以下浏览器不支持 dataset 属性，而 setAttribute 与 getAttribute 是全浏览器支持的，并且定义的属性可以不以 "data-" 开头。

// 创建自定义属性
方法一：
<div id="json" data-obj='{game:"on"}'></div>
<div id="tel" data-tel-iphone=18691236164></div>
方法二：（效果与其他两个方法相当，都是在元素标签上声明一个 data-* 属性）
document.getElementById("json").dataset.obj='{game:"on"}';
document.getElementById("tel").dataset.telIphone=18691236164; //注意属性名的驼峰命名法
方法三：
document.getElementById("json").setAttribute("data-obj", '{game:"on"}');
document.getElementById("tel").setAttribute("data-tel-iphone", 18691236164);

// 读取自定义属性（无论传递何种数据类型的值，读取到的都将是字符串形式）
// 以下返回字符串 '{game:"on"}'，如果需要解析成对象，可以使用 eval("(" + string + ")") 方法。
document.getElementById("json").dataset.obj;
document.getElementById("json").getAttribute("data-obj");
// 以下返回字符串 "18691236164"
document.getElementById("json").dataset.telIphone; //注意属性名的驼峰命名法
document.getElementById("json").getAttribute("data-tel-iphone");



* 设置语言
强烈建议为 html 根元素指定 lang 属性，从而为文档设置正确的语言。这将有助于语音合成工具确定其所应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则等等。
<html lang="en-us">
<html lang="en">
<html lang="zh">
<html lang="zh-CN"> 简体中文



* 框架（不能与body共存，在html5中已被废除）
// cols  属性，用于横向分布，可以是百分比或者具体像素值
// rows  属性，用于纵向分布，可以是百分比或者具体像素值
// noresize  属性，设置框架是否可被拖动
// name="showframe"  属性，定义子框架为导航框架，即其它框架内的链接被点击后在该框架中打开
// noframes  标签，用于嵌入替代被容

<frameset cols="25%,50%,25%" noresize="noresize">
  <frame src="a.html" noresize="false">
  <frame src="b.html">
  <frame src="c.html" name="showframe">
<noframes>
<body>您的浏览器无法处理框架！</body>
</noframes>
</frameset>



* 内连框架（在body中的框架）
<iframe> 比较像行内块元素，在IE9及以下浏览器不支持通过样式来设置边框，因此需要使用属性来设置

// frameborder  用于定义是否显示边框。值为"yes"或"no"（1或0、"true"或"false"都可以）。
// allowtransparency  用于定义是否允许透明。值为"yes"或"no"（1或0、"true"或"false"都可以）。然后在样式中设置背景色透明即可。
// name  指定内连框架名称，用于其它链接的打开目标指向到该框架。
// longdesc  规定一个页面，该页面包含了有关 iframe 的较长描述。
// width  定义 iframe 的宽度。
// height  规定 iframe 的高度。
// marginwidth  定义 iframe 的左侧和右侧的像素边距。
// marginheight  定义 iframe 的顶部和底部的像素边距。
// scrolling  规定是否在 iframe 中显示滚动条。值有：yes、no、auto。
// seamless  规定 <iframe> 看上去像是包含文档的一部分，即无边框或滚动条。（html5新增，但是经过测试没有效果）
// src  规定在 iframe 中显示的文档的 URL。
// srcdoc  传入一段 html 代码，规定在 <iframe> 中显示的页面的 HTML 内容。（html5新增）
// sandbox  如果被规定为空字符串（sandbox=""），sandbox 属性将会启用一系列对行内框架中内容的额外限制。
	属性的值既可以是一个空字符串（应用所有的限制），也可以是空格分隔的预定义值列表（将移除特定的限制）。
	""			应用以下所有的限制。
	allow-same-origin	允许 iframe 内容被视为与包含文档有相同的来源。
	allow-top-navigation	允许 iframe 内容从包含文档导航（加载）内容。
	allow-forms		允许表单提交。
	allow-scripts		允许脚本执行。

<body>
<iframe src="a.html" scrolling="no" frameborder="no" name="ifm" id="ifm" onload="iFrameSize()"></iframe>
<p>某些老式的浏览器不支持内联框架。</p>
<p>如果不支持，则 iframe 是不可见的。</p>
<p><a href="http://www.w3school.com.cn" target="iframe_a">W3School.com.cn</a></p>
</body>

// 框架只有声明了 name 属性时，window.ifm 或者 window.frames["ifm"] 才可以获取到框架内页面的 window 对象，否则获取到的只是框架的 DOM 对象。

// iframe.contentWindow 返回框架内页面的 window 对象。（2016.4.8目前来看所有浏览器都支持该属性）
// iframe.contentDocument 返回框架内页面的 document 对象。（2016.4.8目前来看所有浏览器都支持该属性）
// 注意，iframe.contentWindow 即 window 对象的引用是不会跟随 iframe.src 改变而改变，是始终不变的。（但是注册在该 window 上面的事件会被清空）
// 而 iframe.contentDocument 即 document 对象的引用会在 iframe.src 改变后更新掉，是会改变的。

// onload 中的代码是设置框架宽高等于被调用 html 的宽高，详细代码如下：
var ifm = document.getElementById("ifm");
var subWeb = iframe.contentDocument || window.frames[iframe.name].document;
if(ifm && subWeb) {
	ifm.width = subWeb.documentElement.scrollWidth || subWeb.body.scrollWidth;
	ifm.height = subWeb.documentElement.scrollHeight || subWeb.body.scrollHeight;
}
// 同时为了在框架内的页面宽高达不到框架容器的宽高时不会变形，还需要在样式中设置框架的最小宽高。
min-width: 100%;
min-heigt: 100%;
*min-width: ~'expression(this.parentNode.clientWidth)';
*min-height: ~'expression(this.parentNode.clientHeight)';



* 图像映射
// area  元素永远嵌套在 map 元素内部。area 元素可定义图像映射中的区域。
// 注释：<img>中的 usemap 属性可引用 <map> 中的 id 或 name 属性（取决于浏览器），所以我们应同时向 <map> 添加 id 和 name 属性。

<img src="planets.jpg" border="0" usemap="#planetmap" alt="Planets" />
<map name="planetmap" id="planetmap">
  <area shape="circle" coords="180,139,14" href="venus.html" alt="Venus" />
  <area shape="circle" coords="129,161,10" href="mercur.html" alt="Mercury" />
  <area shape="rect" coords="0,0,110,260" href="sun.html" alt="Sun" />
  <area shape="poly" coords="178,240,188,217,192,215,214,204" href="#" />
</map>

// circle 的 coords 属性值中，前两个表示圆心坐标，第三个表示半径
// rect 的 coords 属性值中，前两个表示左上角坐标，后两个表示右下角坐标
// poly 的 coords 属性值中，每连续的两个值表示多边形的一个顶点坐标


* 拖拽（html5新增属性）
<script type="text/javascript">
// 允许放下函数，当拖动至有效拖放目标上方时执行的函数。
// 默认地，无法将数据/元素放置到其他元素中。如果需要设置允许放置，我们必须阻止对元素的默认处理方式。
function allowDrop(e) {e.preventDefault();}
// 开始拖拽时执行的函数，数据类型是 "Text"，值是可拖动元素的 id 
function drag(ev) {e.dataTransfer.setData("Text",e.target.id);}
// 放置函数，当元素被允许放置时执行的函数。
function drop(e)
{
	var data=e.dataTransfer.getData("Text");
	e.target.appendChild(document.getElementById(data));
}
</script>
// 可将 <img> 拖拽进 <div> 中
// draggable  拖拽启用属性必须为"true"
<div id="div1" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
<img id="drag1" src="/i/w3school_banner.gif" draggable="true" ondragstart="drag(event)" />
// 被拖动元素事件
ondragstart  当拖动操作开始时触发该事件
ondrag  当拖动元素时触发该事件
ondragend  当拖动操作结束时触发该事件
// 放置目标元素事件
ondragenter  当有效的放置目标感应到有元素被拖动到其范围时触发该事件（会多次触发）
ondragleave  当有效的放置目标感应到有元素被拖离其范围时触发该事件（会多次触发）
ondragover  当有效的放置目标感应到有元素被拖动到其上方时触发该事件（会多次触发）
ondrop  当有效的放置目标允许放置被拖动元素时触发该事件



* 列表
// 点列表
<ul>
 <li></li>
 <li></li>
 <li></li>
</ul>
// 数字列表
<ol>
 <li></li>
 <li></li>
 <li></li>
</ol>
// 文本列表
<dl>
   <dt>标题</dt>
   <dd>内容</dd>
   <dt>标题</dt>
   <dd>内容</dd>
</dl>



* 边框左上角嵌入标题
<fieldset>
    <legend>健康信息</legend>
</fieldset>



* 度量元素（html5新增元素）
<meter value="0.5"></meter>
// 拥有下列属性：
value	number类型，定义度量的值。默认取值范围在 0.0~1.0。
max		number类型，定义最大值。默认值是 1。
min		number类型，定义最小值。默认值是 0。
high	number类型，定义度量的值位于哪个点，被界定为高的值，超出则显示为黄色。
low		number类型，定义度量的值位于哪个点，被界定为低的值，超出则显示为黄色。
optimum	number类型，定义什么样的度量值是最佳的值。
		如果该值高于 "high" 属性，则意味着值越高越好，如果低于最低值，则显示为红色。
		如果该值低于 "low" 属性的值，则意味着值越低越好，如果高于最高值，则显示为红色。



* 进度条元素（html5新增元素）
<progress value="0.5"></progress>
value	number类型，定义进程的当前值。默认取值范围在 0.0~1.0。
max		number类型，定义完成的值。默认值是 1。



* <a>链接常用属性
<a rel="nofollow"></a>  告诉搜索引擎不要将本页面记作该链接网站的反向链接，防止该网站排名欺诈。
<a href="http://www.w3school.com.cn/"></a>  规定链接指向的页面的 URL。
<a download="http://www.w3school.com.cn/1.jpg"></a>  规定被下载的超目标地址。标签中必须设置 href 属性才会生效。如果 href 属性为下载的目标地址，那么 download 可以规定下载文件的名称和扩展名。（html5新增）
<a media="screen and (max-width: 600px)"></a>  规定只有匹配的媒体类型可以使用该链接。（html5新增）
<a target="_blank"></a>  规定在何处打该链接
target  规定在何处打开页面中所有的链接。包含以下值：
	_self  默认，在相同的框架中打开被链接文档。
	_blank  在新窗口中打开被链接文档。
	_parent  在父框架集中打开被链接文档。
	_top  在顶层窗口中打开被链接文档。
	framename  （框架的 name 或 id）在指定的框架中打开被链接文档。

// 点击<a>链接可以执行js代码
<a href="javascript:void(document.body.style.backgroundColor='green');"></a>
// 取消<a>链接默认点击行为的三种方法
<a href="javascript:void(0);"></a>
<a href="##"></a>
<a href="#" onClick="return false"></a>

// 将<a>连接指向邮箱地址，系统会自动打开邮箱
<a href="mailto:bjj19851010@126.com"></a>

// 手机设备上使用<a>连接调用系统的拨号功能（html5新增）
<a href="tel:18691236164">拨号</a>
// 手机设备上使用<a>连接调用系统的短信功能（html5新增）
<a href="sms:18691236164">发短信</a>

使用wtai协议进行拨打电话。
<a href="wtai://wp//mc;10086;">拨打10086</a>  
<a href="wtai://wp/ap;10086;">将10086存储至电话簿</a>

// 如果想用 js 模拟以上的href操作，使用 <a> 链接的 click 事件是无效的，但是可以利用 window.location 对象来实现，例如：
window.location.href='tel:18691236164';
window.location.href='sms:18691236164';




* <base> 标签为页面上的所有使用相对路径的 url 规定默认基础路径，一般写在 <head> 中。
<base href="http://www.w3school.com.cn/" target="_blank">
href  规定页面中所有相对路径的基础路径
target  规定在何处打开页面中所有的链接。



* 日期时间标签
// 使用日期时间标签可以帮助搜索引擎有效的检索网站内容
<time datetime="2013-12-27T22:00Z">可乐的生日是2017年12月27日</time>
// 搜索引擎将会读取 datetime 中的内容，其中“T”字母用于分隔日期与时间，“Z”字母用于表示使用的时UTC标准时间
// 如果要表示另一个时区的时间，可以在结尾加上时差，如下：
<time datetime="2013-12-27T22:00+9:00">可乐的生日是美国时间的晚上22点</time>
// pubdate 属性用于标明信息的发布时间，让搜索引擎可以区分哪些是信息发布的日期时间，哪些是其它用途的日期时间
<time datetime="2014-05-03" pubdate>发布日期：2014.05.03</time>



* 设置表格单元格的默认间距为零
<table cellspacing="0"></table>
对应的 CSS 样式为 border-spacing



* html文档中格式化文本
// 该元素会保留 html 页面中输入的制表符，如空格，换行等
// 如果使用 <pre> 标签来定义计算机源代码，可以使用符号实体来表示特殊字符，比如 "&lt;" 代表 "<"，"&gt;" 代表 ">"，"&amp;" 代表 "&"。
<pre width="40"></pre>
// width 属性用于定义每行的最大字符数（通常是 40、80 或 132）。



* <abbr>缩略词标记
<abbr title="是指Model-View-Controller模式">MVC</abbr>



* <marquee>走马灯标签
marquee 参数：
bgcolor：滚动文本框的背景颜色。
direction：滚动方向设置，可选择left、right、up和down。
scrolldelay：每轮滚动之间的延迟时间，越大越慢。
scrollamount：一次滚动总的时间量，数字越小滚动越慢。
behaviour：滚动的方式设置，三种取值：scroll（循环滚动） lide（单次滚动）、Alternate（来回滚动）。
align：文字的对齐方式设置。可选择middle(居中)、bottom(居下)还是top(居上)。
width：滚动文本框的宽度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。
height：滚动文本框的高度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。
loop：滚动次数。默认为infinite
hspace、vspace：前后、上下的空行。



* <img> 的 complete 属性
complete 为一个布尔值，根据这个属性可以判定该图片是否已经加载完成



* 常用标签
<center>水平居中标签</center>（在html5中以被废除，使用CSS样式代替）
<del>删除线</del>
<u>下划线线</u>（在html5中以被废除，使用CSS样式代替）




