@charset "UTF-8";

/////////////////////////////////// 自定义样式工具 ///////////////////////////////////

// 三角小箭头
.arr-init(@position, @margin, @pseudo_elements) {
	@select: ~":@{pseudo_elements}";
	&@{select} {
		content: "";
		display: block;
		width: 0;
		height: 0;
		position: absolute;
		top: extract(@position, 1);
		right: extract(@position, 2);
		bottom: extract(@position, 3);
		left: extract(@position, 4);
		margin: @margin;
	}
}
.larr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-right-color: extract(@color, 1);
		_border-top-color: extract(@color, 2); //为了兼容 IE6，可以将其设置为与背景颜色相同
		_border-bottom-color: extract(@color, 2);
	}
}
.larr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(50% 100% auto auto, -@height_half -1px 0 0, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.rbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.larr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.rbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.rarr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-left-color: extract(@color, 1);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.rarr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(50% auto auto 100%, -@height_half 0 0 -1px, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.lbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.rarr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.lbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.tarr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-bottom-color: extract(@color, 1);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.tarr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(auto auto 100% 50%, 0 0 -1px -@width_half, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.bbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.tarr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.bbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.barr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-top-color: extract(@color, 1);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.barr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(100% auto auto 50%, -1px 0 0 -@width_half, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.tbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.barr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.tbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}


// 镂空小箭头（IE8及以下浏览器不支持）
.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements) {
	@select: ~":@{pseudo_elements}";
	&@{select} {
		content: "";
		display: block;
		.sz(@size);
		.tbd(@color, @thickness);
		.lbd(@color, @thickness);
		position: absolute;
		top: extract(@position, 1);
		right: extract(@position, 2);
		bottom: extract(@position, 3);
		left: extract(@position, 4);
		margin: @margin;
	}
}
.larr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.larr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(-45deg);
	}
}
.rarr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.rarr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(135deg);
	}
}
.tarr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.tarr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(45deg);
	}
}
.barr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.barr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(-135deg);
	}
}


// 粗箭头（IE8及以下浏览器不支持）
// 参数1：为箭头的宽度
// 参数2：为箭头的高度
// 参数3：为箭头的厚度
.larr3(@width, @height, @thickness) {
	@halfHeight: @height / 2;
	@width2: @width - @thickness;
	@angle: atan(@width2 / @halfHeight);
	width: @width2 / 2 + @thickness;
	padding-left: @width2 / 2;
	height: @height;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		display: block;
		width: @thickness;
		height: @halfHeight;
		.bgcl(#fff);
	}
	&:before {
		.skew(-@angle, 0);
	}
	&:after {
		.skew(@angle, 0);
	}
}
.rarr3(@width, @height, @thickness) {
	@halfHeight: @height / 2;
	@width2: @width - @thickness;
	@angle: atan(@width2 / @halfHeight);
	width: @width2 / 2 + @thickness;
	padding-left: @width2 / 2;
	height: @height;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		display: block;
		width: @thickness;
		height: @halfHeight;
		.bgcl(#fff);
	}
	&:before {
		.skew(@angle, 0);
	}
	&:after {
		.skew(-@angle, 0);
	}
}
.tarr3(@width, @height, @thickness) {
	@halfWidth: @width / 2;
	@height2: @height - @thickness;
	@angle: atan(@height2 / @halfWidth);
	width: @width;
	padding-top: @height2 / 2;
	height: @height2 / 2 + @thickness;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		.inbl;
		width: @halfWidth;
		height: @thickness;
		.bgcl(#fff);
	}
	&:before {
		.skew(0, -@angle);
	}
	&:after {
		.skew(0, @angle);
	}
}
.barr3(@width, @height, @thickness) {
	@halfWidth: @width / 2;
	@height2: @height - @thickness;
	@angle: atan(@height2 / @halfWidth);
	width: @width;
	padding-top: @height2 / 2;
	height: @height2 / 2 + @thickness;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		.inbl;
		width: @halfWidth;
		height: @thickness;
		.bgcl(#fff);
	}
	&:before {
		.skew(0, @angle);
	}
	&:after {
		.skew(0, -@angle);
	}
}



// loading 加载中动画
// html结构必须为 <div class="loading"><div></div></div>
.loading(@size: 30px, @color: #666) {
	.inbl;
	>:first-child {
		position: relative;
		border-top: @size*.15 solid fade(@color, 20%);
		border-right: @size*.15 solid fade(@color, 20%);
		border-bottom: @size*.15 solid fade(@color, 20%);
		border-left: @size*.15 solid @color;
		-webkit-transform: translateZ(0);
		-ms-transform: translateZ(0);
		transform: translateZ(0);
		-webkit-animation: loading 1s infinite linear;
		animation: loading 1s infinite linear;
	}
	>:first-child,
	>:first-child:after {
		border-radius: 50%;
		width: @size*.7;
		height: @size*.7;
	}
	@-webkit-keyframes loading {.loading-frames;}
	@keyframes loading {.loading-frames;}

	.loading-frames() {
		0% {
			-webkit-transform:rotate(0deg);
			transform:rotate(0deg);
		}
		100% {
			-webkit-transform:rotate(360deg);
			transform:rotate(360deg);
		}
	}
}

.loading2(@size: 30px, @color: #666) {

	@padding: @size*.4;
	@wh: @size*.2;
	@xy1: @size*.24;
	@xy2: @size*.36;
	@diffuse1: @size*.02;
	@diffuse2: @size*.1;

	.inbl;
	padding: @padding;

	>:first-child {
		width: @wh;
		height: @wh;
		border-radius: 50%;
		position: relative;
		-webkit-animation: loading2 1.4s infinite linear;
		animation: loading2 1.4s infinite linear;
		-webkit-transform: translateZ(0);
		-ms-transform: translateZ(0);
		transform: translateZ(0);
	}
	@-webkit-keyframes loading2 {.loading-frames;}
	@keyframes loading2 {.loading-frames;}

	.loading-frames() {
		0%,100% {
			box-shadow:0 -@xy2 0 @diffuse1 @color,
			@xy1 -@xy1 0 0 @color,
			@xy2 0 0 -@diffuse2 @color,
			@xy1 @xy1 0 -@diffuse2 @color,
			0 @xy2 0 -@diffuse2 @color,
			-@xy1 @xy1 0 -@diffuse2 @color,
			-@xy2 0 0 -@diffuse2 @color,
			-@xy1 -@xy1 0 0 @color;
		}
		12.5% {
			box-shadow:0 -@xy2 0 0 @color,
			@xy1 -@xy1 0 @diffuse1 @color,
			@xy2 0 0 0 @color,
			@xy1 @xy1 0 -@diffuse2 @color,
			0 @xy2 0 -@diffuse2 @color,
			-@xy1 @xy1 0 -@diffuse2 @color,
			-@xy2 0 0 -@diffuse2 @color,
			-@xy1 -@xy1 0 -@diffuse2 @color;
		}
		25% {
			box-shadow:0 -@xy2 0 -@diffuse2 @color,
			@xy1 -@xy1 0 0 @color,
			@xy2 0 0 @diffuse1 @color,
			@xy1 @xy1 0 0 @color,
			0 @xy2 0 -@diffuse2 @color,
			-@xy1 @xy1 0 -@diffuse2 @color,
			-@xy2 0 0 -@diffuse2 @color,
			-@xy1 -@xy1 0 -@diffuse2 @color;
		}
		37.5% {
			box-shadow:0 -@xy2 0 -@diffuse2 @color,
			@xy1 -@xy1 0 -@diffuse2 @color,
			@xy2 0 0 0 @color,
			@xy1 @xy1 0 @diffuse1 @color,
			0 @xy2 0 0 @color,
			-@xy1 @xy1 0 -@diffuse2 @color,
			-@xy2 0 0 -@diffuse2 @color,
			-@xy1 -@xy1 0 -@diffuse2 @color;
		}
		50% {
			box-shadow:0 -@xy2 0 -@diffuse2 @color,
			@xy1 -@xy1 0 -@diffuse2 @color,
			@xy2 0 0 -@diffuse2 @color,
			@xy1 @xy1 0 0 @color,
			0 @xy2 0 @diffuse1 @color,
			-@xy1 @xy1 0 0 @color,
			-@xy2 0 0 -@diffuse2 @color,
			-@xy1 -@xy1 0 -@diffuse2 @color;
		}
		62.5% {
			box-shadow:0 -@xy2 0 -@diffuse2 @color,
			@xy1 -@xy1 0 -@diffuse2 @color,
			@xy2 0 0 -@diffuse2 @color,
			@xy1 @xy1 0 -@diffuse2 @color,
			0 @xy2 0 0 @color,
			-@xy1 @xy1 0 @diffuse1 @color,
			-@xy2 0 0 0 @color,
			-@xy1 -@xy1 0 -@diffuse2 @color;
		}
		75% {
			box-shadow:0 -@xy2 0 -@diffuse2 @color,
			@xy1 -@xy1 0 -@diffuse2 @color,
			@xy2 0 0 -@diffuse2 @color,
			@xy1 @xy1 0 -@diffuse2 @color,
			0 @xy2 0 -@diffuse2 @color,
			-@xy1 @xy1 0 0 @color,
			-@xy2 0 0 @diffuse1 @color,
			-@xy1 -@xy1 0 0 @color;
		}
		87.5% {
			box-shadow:0 -@xy2 0 0 @color,
			@xy1 -@xy1 0 -@diffuse2 @color,
			@xy2 0 0 -@diffuse2 @color,
			@xy1 @xy1 0 -@diffuse2 @color,
			0 @xy2 0 -@diffuse2 @color,
			-@xy1 @xy1 0 0 @color,
			-@xy2 0 0 0 @color,
			-@xy1 -@xy1 0 @diffuse1 @color;
		}
	}
}