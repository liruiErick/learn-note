@charset "UTF-8";

/////////////////////////////////// 基础工具 ///////////////////////////////////

// 安全色
@gray:		#666666; //灰
@blue:		#428bca; //蓝
@green:		#5cb85c; //绿
@yellow:	#f0ad4e; //黄
@red:		#d9534f; //红
@sky:		#5bc0de; //天蓝


// 转换行内块元素
.inbl() {
	display: inline-block;
	*display: inline;
	*zoom: 1;
}


// 设置大小
.sz(@width, @height) {
	width: @width;
	height: @height;
}
.sz(@size) {
	.sz(@size, @size);
}


// 可根据参数设置元素是否显示
.setWidth(@width) when (isnumber(@width)) and (@width<=0) { display: none; width: 0; }
.setWidth(@width) when (default()) { width: @width; }
.setHeight(@height) when (isnumber(@height)) and (@height<=0) { display: none; height: 0; }
.setHeight(@height) when (default()) { height: @height; }


// 设置字体大小
.ftsz(@size, @position: left center) when (ispixel(@size)) and (@size < 12px) {
	font-size: @size;
	text-align: extract(@position, 1);
	-webkit-transform-origin: @position;
	-webkit-transform: scale(unit(@size / 12px)); //由于 webkit 浏览器的字体不能小于 12px，因此需要单独设置缩放比例。
	     -o-transform: scale(1); //由于 Opera 浏览器能够识别 webkit 前缀，因此需要重置比例为 1。
	//由于行内元素对变换属性无效，因此只能针对 webkit 浏览器设置元素为行内块元素
	@media screen and (-webkit-min-device-pixel-ratio:0) {
		display: inline-block;
	}
}
.ftsz(@size, @align: left) when (default()) { //这里的第二个参数的主要作用是为了在不知道字体是否小于12px的情况下调用函数时，可以预先设置字体的对齐方式，以便能够与上面的函数正确兼容
	font-size: @size;
	text-align: extract(@align, 1);
}


// 透明度
.op(@opacity) {
	opacity: @opacity;
	@opacity-ie: @opacity * 100;
	filter: ~"alpha(opacity=@{opacity-ie})"; // IE8
}


// 设置<a>链接的颜色
.acl(@color, @decoration: underline) when not(iscolor(@decoration)) {
	color: @color;
	&:hover {
		color: contrast(@color, darken(@color,20%), lighten(@color,20%), 50%);
		text-decoration: @decoration;
	}
}
.acl(@color, @hoverColor, @decoration: underline) when (iscolor(@hoverColor)) {
	color: @color;
	&:hover {
		color: @hoverColor;
		text-decoration: @decoration;
	}
}


// 清除<a>链接颜色
.noacl() {
	color: inherit;
	text-decoration: none;
}


// 清除浮动
.clear() {
	*zoom: 1;
	&:after {
		content: "";
		display: table; //IE9.js在为IE6-7做兼容时会生成一个元素来模拟伪元素，空的table元素将不会产生高度
		clear: both;
	}
}


// 锁定顶部（IE6-7不存在此问题）
.fix() {
	&:before {
		content: "";
		display: table;
	}
}


// 清除浮动并锁定顶部和底部
.cf() {
	*zoom: 1;
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after { clear: both; }
}


// 粗体
.b() { font-weight: bold; }
// 取消粗体
.nob() { font-weight: normal; }
// 斜体
.i() { font-style: italic; }
// 取消斜体
.noi() { font-style: normal; }


// 删除线
.del() { text-decoration: line-through; }


// 设置背景颜色
.bgcl(@color) {
	background-color: @color;
}
// 设置背景图
.bgimg(@url, @align: center, @repeat: no-repeat) when (length(@url)=1) {
	background-image: data-uri(@url);
	background-repeat: @repeat;
	background-position: @align;
}
.bgimg(@url, @align: center, @repeat: no-repeat) when (length(@url)>1) {
	background-image: @url;
	background-repeat: @repeat;
	background-position: @align;
}
// 背景图大小
.bgsz(@size) {
	   -moz-background-size: @size;
	        background-size: @size;
	-webkit-background-size: @size; //chrome 游览器下 W3C 标准写法会有 bug，因此该属性放在最后书写
}


// CSS3 运算
.calc(@proprety, @value) {
	@{proprety}: -webkit-calc(@value);
	@{proprety}:    -moz-calc(@value);
	@{proprety}:      -o-calc(@value);
	@{proprety}:         calc(@value);
}


// 禁止选择
.nosel() {
	-webkit-user-select:none;
	   -moz-user-select:none;
	    -ms-user-select:none;
	     -o-user-select:none;
	        user-select:none;
}


// 边框
.bd(@color: #ddd, @width: 1px, @style: solid) {
	border: @width @style @color;
}
.lbd(@color: #ddd, @width: 1px, @style: solid) {
	border-left: @width @style @color;
}
.rbd(@color: #ddd, @width: 1px, @style: solid) {
	border-right: @width @style @color;
}
.tbd(@color: #ddd, @width: 1px, @style: solid) {
	border-top: @width @style @color;
}
.bbd(@color: #ddd, @width: 1px, @style: solid) {
	border-bottom: @width @style @color;
}
.nobd() {
	border-style: none;
}
.nolbd() {
	border-left-style: none;
}
.norbd() {
	border-right-style: none;
}
.notbd() {
	border-top-style: none;
}
.nobbd() {
	border-bottom-style: none;
}


// 圆角边框
.bdrd(@radius: 4px) {
	-webkit-border-radius: @radius; //兼容 Android <2.0
	border-radius: @radius;
}


// 文本阴影
.ttsd(@color: #000) when (iscolor(@color)) {
	text-shadow: 0 1px 0 fade(@color,60%);
}
.ttsd(skew, @color: #000) {
	text-shadow: 1px 1px 0 fade(@color,60%);
}
.ttsd2(@color: #000) when (iscolor(@color)) {
	text-shadow: 0 0 6px fade(@color,60%);
}
.ttsd2(skew, @color: #000) {
	text-shadow: 2px 2px 4px fade(@color,30%);
}


// 盒阴影
.bxsd(@color: #000) when (iscolor(@color)) {
	.box-shadow(0 0 8px fade(@color,30%));
}
.bxsd(in, @color: #000) {
	.box-shadow(inset 0 0 8px fade(@color,30%));
}
.bxsd(skew, @color: #000) {
	.box-shadow(2px 2px 4px fade(@color,30%));
}
.bxsd(left, @color: #000) {
	.box-shadow(-4px 0 8px fade(@color,30%));
}
.bxsd(right, @color: #000) {
	.box-shadow(4px 0 8px fade(@color,30%));
}
.bxsd(top, @color: #000) {
	.box-shadow(0 -4px 8px fade(@color,30%));
}
.bxsd(bottom, @color: #000) {
	.box-shadow(0 4px 8px fade(@color,30%));
}


// 盒模型为边框盒
.bxbd() {
	.box-sizing(border-box);
}


// 垂直线性渐变
.vlg(@startColor, @endColor) {
	#gradient > .vertical(@startColor; @endColor);
}
// 水平线性渐变
.hlg(@startColor, @endColor) {
	#gradient > .horizontal(@startColor; @endColor);
}
// 径向渐变
.rg(@innerColor, @outerColor) {
	#gradient > .radial(@innerColor, @outerColor);
}



// 文本溢出三点显示
.of3p() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// 多行文本截断并加三点（webkit 专用）
.vof3p(@lineCount: 1) {
	overflow : hidden;
	text-overflow: ellipsis;
	display: -webkit-box;
	-webkit-line-clamp: @lineCount;
	-webkit-box-orient: vertical;
}


// 文本截断
.wba() { //无视默认换行规则，文本到达尽头强行截断换行
	word-break: break-all;
}
.wbw() { //默认的换行规则，超长单词强行截断
	word-break: normal;
	word-wrap: break-word;
}


// 禁止换行
.nowrap() {
	white-space: nowrap;
}


// 隐藏文本
.hdtt() {
	font: ~"0/0" a;
	color: transparent;
    text-indent: 200%;
	text-shadow: none;
    white-space: nowrap;
    overflow: hidden;
}