# 变量输出

输出一个变量的值，等同于php的 <?php echo $my_var;?>，花括号可以省略但不建议去掉。
{$my_var}

# 条件判断

通过if判断流程分支
如果写在HTML表单元素中，可以省去使代码更清晰易读，如{if $my_var}xxx{/if}
<!--{if $my_var}-->
    任意html语句
<!--{/if}-->

带有多条件的if写法，可使用PHP常规判断中的按位运算符等
<!--{if $my_var && ($my_var2 & 1 || $my_var3 == 3)}-->
    任意html语句
<!--{/if}-->

带有分支条件的if写法
<!--{if $my_var == 1}-->
    变量为1
<!--{elseif $my_var == 2}-->
    变量为2
<!--{else}-->
    其他情况
<!--{/if}-->

# 循环输出

带有数组键的循环写法
<!--{loop $my_arr $key $val}-->
    循环输出的HTML语句
<!--{/loop}-->

没有数组键的循环写法
<!--{loop $my_arr $val}-->

# 模板嵌套

将被嵌套模板内容解析为PHP语句并合并入本模板中的写法
common/header 对应某个模板套系中的common目录的header.htm模板文件
<!--{subtemplate common/header}-->

程序运行时include嵌套模板内容
<!--{template common/header}-->

# 插件钩子

在模板中设立插件钩子 插件模板和语言包的设计
hook为关键词，意为将index_top定义为钩子
<!--{hook/index_top}-->

# 变量数组嵌套使用

条件判断或变量输出时用到
<!--{if $my_arr[$my_var]}-->
<!--{if $my_arr[0]}-->
<!--{if $my_arr[$my_arr2[$my_var]]}-->

# PHP解析

在模板中使用PHP语句可以通过{eval}进行
<!--{eval $my_var = 1;}-->
<!--{eval echo $my_var;}-->
<!--{eval $my_arr = array(1, 2, 3);}-->
<!--{eval print_r($my_arr);}-->
<!--{eval output();}-->
<!--{eval exit();}-->

多行PHP解析(Discuz! X3 新增)
<!--{eval}-->
...PHP语句...
<!--{/eval}-->

# 语言包使用

在模板中可以通过下面的代码来使用语言包中的某个值
{lang index_yesterday}
其中语言包在 ./source/language/目录下，以PHP数组形式存放