文本类

import flash.text.*;所有文本类

var textField:TextField=new TextField();新建文本,默认宽高为100,同时可以为它设置xy坐标,width和height,text文本内容(textField.x;textField.width;textField.text)

var textFormat=new TextFormat(字体,大小,颜色);创建一个文本格式

文本格式.align="center";居中对齐(可实现换行后仍然居中)

文本格式.align=TextFormatAlign.CENTER;在文本字段内将文本居中对齐
文本格式.align=TextFormatAlign.JUSTIFY;在文本字段内将文本两端对齐
文本格式.align=TextFormatAlign.LEFT;在文本字段内将文本左对齐
文本格式.align=TextFormatAlign.RIGHT;在文本字段内将文本右对齐

文本格式.font="字体";

文本格式.size="25";设置字体大小

文本格式.color=0xFF0000;文本格式颜色

文本格式.bold=true;字体加粗

文本格式.italic=true;斜体

文本格式.underline=true;下划线

文本格式.url="网址";文本添加超链接

文本格式.target="_blank";在新窗口中打开超链接,另外还有在当前/上一级/最外层贞或者窗口中打开(_self,_parent,_top)

文本名.defaultTextFormat=文本格式;更改默认文本格式(文本格式必须在text属性定义前赋予文本,否则没有效果)

文本名.setTextFormat(文本格式,起始索引,结束索引);设置指定文本字段的文本格式(文本格式必须在text属性定义后赋予文本,且text属性更改后将失效)

文本名.text="文本";输入文本内容

文本名.appendText(字符);为文本添加字符,等同于+=,但比其速度更快

文本名.textWidth;文本字体宽度

文本名.autoSize=TextFieldAutoSize.NONE;不自动调整文本大小

文本名.autoSize=TextFieldAutoSize.LEFT;自动调整文本大小,左对齐

文本名.autoSize=TextFieldAutoSize.RIGHT;自动调整文本大小,右对齐

文本名.autoSize=TextFieldAutoSize.CENTER;自动调整文本大小,居中对齐

文本名.textColor;设置文本字段颜色

文本名.background=true;开启背景颜色

文本名.backgroundColor;文本框背景色

文本名.border=true;开启文本周围边框 

文本名.borderColor;设置边框颜色

文本名.selectable=false;使文本不可被选择

文本名.multiline=true;是否支持多行

文本名.wordWrap=true;是否支持换行

文本名.mouseWheelEnabled=false;禁用鼠标滚轮滚动文字

文本名.scrollV=5;设置文本内容的第五行为可见的第一行

文本名.scrollH=5;设置文本内容从左向右第5个像素为可见框的左边界

文本名.maxScrollV;只读属性,除可见行数外,剩余的行数

文本名.maxScrollH;只读属性,除水平可见像素外,剩余的像素

文本名.bottomScrollH;只读属性,文本第一行到可见框底部之间的行数

文本名.displayAsPassword=true;文本框内字符以密码形式表示,即以星号(*)显示

文本名.alwaysShowSelection=true;如果选中文字,文字背景将始终呈现灰色

文本名.type=TextFieldType.INPUT;设置文本类型为输入类型

文本名.type=TextFieldType.DYNAMIC;设置文本类型为动态类型

文本名.restrict="0-9";限制输入0-9的数字,"A-z","A-Z","a-z","0-9A-F";"^4"限制^之后的字符为非法;"\\-"可输入短杠

文本名.maxChars=3;限制输入3个字符

文本名.textWidth;只读属性，获取所能显示出的文本字符的像素宽度

文本名.textHeight;只读属性，获取所能显示出的文本字符的像素高度

stage.focus=文本名;输入文本框显示光标

uint(输入文本名.text);强制转换为数字类,等于输入文本名.text as uint有同样效果

字符变量.charAt(0);返回字符串里的第1个字符

字符变量.indexOf(字符,起始索引位置);从第一个字符开始查找,返回该字符首字符的索引位置

字符变量.lastIndexOf(字符,起始索引位置);从最末字符开始查找,返回该字符首字符的索引位置

字符变量.toUpperCase();将字符转换成大写

字符变量.toLowerCase();将字符转换成小写

字符变量.charCodeAt(0);将第1个字符转换成ASCII码,汉字的ASCII码大于256

String.fromCodeAt(...数字);静态方法,将ASCII码转化为对应字符

字符变量.substring(0,5);截取从第1个字符开始(包括第1个)到第5个字符结束(不包括第5个)

字符变量.slice(-1,字符变量.length);第一个参数可为负数,能够从倒数开始截取,截取从倒数第1个字符开始(包括倒数第1个)到最后一个字符结束,结束索引应该为字符长度(或者不填写),以达到截取最后一个字符的目的

字符变量.substr(0,5);从第1个字符开始,截取5个字符

字符变量.replace("被替换字符","替换字符");替换字符串中的指定字符(只能替换第一个被匹配到的字符,如需替换多个,则需要正则表达式,详细用法见帮助文档)

数组=字符变量.split("字符",正整数);将字符串按该字符分割后传入数组(不包含该字符),第二参数可选,用来限定数组的长度

*为输入文本添加交互事件

import flash.events.FocusEvent;

FOCUS_IN;选中时

FOCUS_OUT;取消选中时

KEY_FOCUS_CHANGE;用TAB键取消焦点时

MOUSE_FOCUS_CHANGE;用鼠标取消焦点时

event.stopPropagation();阻止用该方法取消焦点

event.relatedObject;失去焦点的对象

event.target;获得焦点的对象

对象.tabEnabled=false;禁用tab切换该对象为焦点

对象.tabIndex=0;设置用tab键切换对象焦点的顺序,0为第一个,-1为还原默认顺序

对象.focusRect=false;禁用对象成为焦点后出现的黄色矩形框,设为null后将会继承stage.stageFocusRect的属性值,若将该属性设为false,则禁用全局的矩形框

import flash.events.Event;

CHANGE;文本被改变后响应

import flash.events.TextEvent;

TEXT_INPUT;文本被改变前响应,text属性可返回将要改变的内容

LINK;单击文本的超链接时响应

SCROLL;文本被滚动时响应

*嵌入字体

import flash.text.Font;加入字体类

Font.registerFont(字体类型);将该类型字体注册到库中

var myFont:Font=new 字体类型();

textFormat.font=myFont.fontName;设置文本格式的字体

文本.embedFonts=true;开启嵌入字体